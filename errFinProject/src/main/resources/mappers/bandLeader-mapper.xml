<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Band">
	<resultMap type="Band" id="BandResultSet">
		<id property="bid" column="BID" />
		<result property="bname" column="BNAME" />
		<result property="bopen_status" column="BOPEN_STATUS" />
		<result property="bintro" column="BINTRO" />
		<result property="cid" column="CID" />
		<result property="binvite_code" column="BINVITE_CODE" />
		<result property="bstatus" column="BSTATUS" />
	</resultMap>
	
	<resultMap type="Member_Band" id="Member_BandResultSet">
		<id property="mbid" column="MBID" />
		<result property="bid" column="BID" />
		<result property="mid" column="MID" />
		<result property="idate" column="IDATE" />
		<result property="istatus" column="ISTATUS" />
		<result property="mlevel" column="MLEVEL" />
		<result property="mname" column="MNAME" />
	</resultMap>
	
	<resultMap type="Profile" id="ProfileResultSet">
		<id property="pid" column="PID" />
		<result property="originName" column="ORIGIN_NAME" />
		<result property="editName" column="EDIT_NAME" />
		<result property="fileSrc" column="FILE_SRC" />
		<result property="fdate" column="FDATE" />
		<result property="ftype" column="FTYPE" />
		<result property="mid" column="MID" />
		<result property="bid" column="BID" />
	</resultMap>
	
	<resultMap type="BanMemberList" id="BanMemberListResultSet">
		<id property="banid" column="BANID" />
		<result property="mid" column="MID" />
		<result property="mname" column="MNAME" />
	</resultMap>
	
	<resultMap type="Ban2" id="BanResultSet">
		<id property="banid" column="BANID" />
		<result property="bid" column="BID" />
		<result property="mid" column="MID" />
		<result property="bantype" column="BANTYPE" />
		<result property="banreason" column="BANREASON" />
	</resultMap>
	
	<resultMap type="Boards" id="BoardsResultSet">
		<id property="boardid" column="BOARDID" />
		<result property="bid" column="BID" />
		<result property="mid" column="MID" />
		<result property="bcontent" column="BCONTENT" />
		<result property="bdate" column="BDATE" />
		<result property="bstatus" column="BSTATUS" />
		<result property="ref_status" column="REF_STATUS" />
		<result property="ref_bid" column="REF_BID" />
	</resultMap>
	
	<resultMap type="Attfile" id="AttfileResultSet">
		<id property="fid" column="FID" />
		<result property="boardId" column="BOARDID" />
		<result property="forigin_name" column="FORIGIN_NAME" />
		<result property="edit_name" column="EDIT_NAME" />
		<result property="file_src" column="FILE_SRC" />
		<result property="fdate" column="FDATE" />
		<result property="flevel" column="FLEVEL" />
	</resultMap>
	
	<resultMap type ="MemberBandProfile" id = "MemberBandProfileResultSet">
		<id property="mbid" column="MBID" />
		<result property="bid" column="BID" />
		<result property="mid" column="MID" />
		<result property="idate" column="IDATE" />
		<result property="istatus" column="ISTATUS" />
		<result property="mlevel" column="MLEVEL" />
		<result property="mname" column="MNAME" />
		<result property="mType" column="MTYPE" />
		<result property="fileSrc" column="FILE_SRC"/>
		<result property="editName" column="EDIT_NAME"/>
	</resultMap>
	
	<!-- 밴드 오픈설정 변경 메소드 -->
	<update id = "updateBandOpenStatus" parameterType = "Band">
		UPDATE BAND SET BOPEN_STATUS = #{bopen_status}
		WHERE BID = #{bid}
	</update>
	
	<!-- 밴드가입한 회원 목록 메소드 -->
	<select id = "selectMember_BandList" parameterType = "Member_Band" resultMap = "Member_BandResultSet">
		SELECT MB.MBID, MB.BID, MB.MID, MB.IDATE, MB.ISTATUS, MB.MLEVEL, M.MNAME 
		FROM MEMBER_BAND MB
		JOIN MEMBER M ON (M.MID = MB.MID)
		WHERE BID = #{bid} AND ISTATUS = 'Y'
		
	</select>
	
	<!-- 밴드가입한 회원 + 가입 신청 목록 메소드 -->
	<select id = "selectMember_BandList2" parameterType = "Member_Band" resultMap = "Member_BandResultSet">
		SELECT MB.MBID, MB.BID, M.MID, MB.IDATE, MB.ISTATUS, MB.MLEVEL, M.MNAME 
		FROM MEMBER_BAND MB
		JOIN MEMBER M ON (M.MID = MB.MID)
		WHERE BID = #{bid} AND NOT ISTATUS = 'N'
		
	</select>
	
	
	<!-- 밴드에 차단 당한 회원 목록 메소드 -->
	<select id = "selectBanMemberList" parameterType = "int" resultMap = "BanMemberListResultSet">
		SELECT b.BANID, M.MID, M.MNAME 
		FROM MEMBER m
		JOIN BAN b ON (b.MID = m.MID)
		WHERE BID = #{bid}
		
	</select>
	
	
	<!-- 공동리더 위임 메소드 -->
	<update id="insertBandMultiLeader" parameterType="int">
		UPDATE MEMBER_BAND SET MLEVEL = '2' WHERE MBID = #{mbid}
	</update>
	
	<!-- 공동리더 삭제 메소드 -->
	<update id="deleteBandMultiLeader" parameterType="int">
		UPDATE MEMBER_BAND SET MLEVEL = '3' WHERE MBID = #{mbid}
	</update>
	
	<!-- 밴드가입한 회원 검색 목록 메소드 -->
	<select id = "searchMember_BandList" parameterType = "Member_Band" resultMap = "Member_BandResultSet">
		SELECT MB.MBID, MB.BID, MB.IDATE, MB.ISTATUS, MB.MLEVEL, M.MNAME 
		FROM MEMBER_BAND MB
		JOIN MEMBER M ON (M.MID = MB.MID)
		WHERE BID = #{bid} AND ISTATUS = 'Y'
		<if test="mname != null">
			AND M.MNAME LIKE '%'|| #{mname} ||'%'
		</if>
	</select>
	
	<!-- 리더 위임 메소드 -->
	<update id="changeBandLeader" parameterType="int">
		UPDATE MEMBER_BAND SET MLEVEL = '1' WHERE MBID = #{mbid}
	</update>
	
	<!-- 리더 위임 메소드 -->
	<update id="changeBandLeader_2" parameterType="int">
		UPDATE MEMBER_BAND SET MLEVEL = '3' WHERE MLEVEL = '1' AND BID = #{bid}
	</update>
	
	<!-- 밴드 탈퇴 메소드 -->
	<update id="secessionBand" parameterType="int">
		UPDATE MEMBER_BAND SET ISTATUS = 'N' WHERE BID = #{bid} AND MID = #{mid}
	</update>
	
	<!-- 밴드 삭제 메소드 -->
	<update id="deleteBand" parameterType="int">
		UPDATE BAND SET BSTATUS = 'N' WHERE BID = #{bid}
	</update>
	
	<!-- 밴드 소개 변경 메소드 -->
	<update id="updateBandIntro" parameterType="Band">
		UPDATE BAND SET BINTRO = #{bintro} WHERE BID = #{bid}
	</update>
	
	<!-- 밴드 프로필 변경 메소드 -->
	<insert id="insertBandModify" parameterType="Profile">
		INSERT INTO PROFILE
		VALUES(SEQ_PID.NEXTVAL, #{originName}, #{editName}, #{fileSrc},  SYSDATE, '2', NULL, #{bid})

	</insert>
	
	<!-- 멤버 차단 등록 메소드 -->
	<insert id="insertBanMember" parameterType="Ban">
		INSERT INTO BAN
		VALUES(SEQ_BANID.NEXTVAL, #{bid}, #{mid}, #{bantype}, #{banreason})

	</insert>
	
	<!-- 밴드명 변경 메소드 -->
	<update id="updateBandName" parameterType="Band">
		UPDATE BAND SET BNAME = #{bname} WHERE BID = #{bid}
	</update>
	
	<!-- 밴드명을 가져오는 메소드 -->
	<select id = "selectBandName" parameterType = "int" resultType = "java.lang.String">
		SELECT BNAME
		FROM BAND
		WHERE BID = #{bid}
	</select>
	
	<!-- 밴드 프로필 정보를 가져오는 메소드 -->
	<select id = "selectProfile" parameterType = "int" resultMap = "ProfileResultSet">
		SELECT * FROM(SELECT *
		FROM PROFILE
		WHERE BID = #{bid}
        ORDER BY FDATE DESC
        ) WHERE ROWNUM = 1
	</select>
	
	<!-- 밴드 멤버 탈퇴 시키는  메소드 -->
	<update id="deleteBandMember" parameterType="int">
		UPDATE MEMBER_BAND SET ISTATUS = 'N' WHERE MBID = #{mbid}
	</update>
	
	<!-- 밴드 오픈상태 정보를 가져오는 메소드 -->
	<select id = "checkBandOpenStatus" parameterType = "int" resultType = "java.lang.String">
		SELECT BOPEN_STATUS FROM BAND WHERE BID = #{bid}
	</select>
	
	<!-- 밴드 소개 정보를 가져오는 메소드 -->
	<select id = "selectBandIntro" parameterType = "int" resultType = "java.lang.String">
		SELECT BINTRO FROM BAND WHERE BID = #{bid}
	</select>
	
	<!-- 차단 회원의 차단 상태 해제 메소드 -->
	<delete id="deleteBanMember" parameterType = "int">
		DELETE FROM BAN WHERE BANID = #{banid}
	
	</delete>
	
	<!-- 밴드 카테고리 정보를 가져오는 메소드 -->
	<select id="checkBandCategory" parameterType = "int" resultType="int">
		SELECT CID
		FROM BAND
		WHERE BID = #{bid}
	</select>
	
	<!-- 밴드 카테고리 수정 메소드 -->
	<update id="updateCategory" parameterType="Band" >
	
		UPDATE BAND SET CID = #{cid} WHERE BID = #{bid}
	</update>
	<select id="selectBandInfo" parameterType = "int" resultMap = "BandResultSet">
		SELECT *
		FROM BAND
		WHERE BID = #{pbid}
	</select>
	
	<!-- 밴드 회원의 등급을 가져오는 메소드 -->
	<select id="selectMlevel" parameterType = "Member_Band" resultType = "int">
		 SELECT * FROM(SELECT MLEVEL FROM MEMBER_BAND
		WHERE BID = ${ bid } AND MID =${ mid }
        AND NOT ISTATUS = 'N'
        
        ORDER BY IDATE DESC
        
        )WHERE ROWNUM = 1
		
		
	</select>
	
	<!-- 밴드 공개 상태 정보를 가져오는 메소드 -->
	<select id = "selectBstatus" parameterType = "int" resultType = "java.lang.String">
		SELECT BOPEN_STATUS FROM BAND WHERE BID = #{bid}
	</select>
	
	<!-- 멤버 밴드 가입 메소드 -->
	<insert id="insertMember_Band" parameterType="Member_Band">
		INSERT INTO MEMBER_BAND
		VALUES(SEQ_MBID.NEXTVAL, #{bid}, #{mid}, SYSDATE, #{istatus}, '3')

	</insert>
	
	<!-- 가입 신청한 회원 목록 메소드 -->
	<select id = "insertMemberList" parameterType = "int" resultMap = "Member_BandResultSet">
		SELECT MB.MBID, MB.BID, M.MID, MB.IDATE, MB.ISTATUS, MB.MLEVEL, M.MNAME 
		FROM MEMBER_BAND MB
		JOIN MEMBER M ON (M.MID = MB.MID)
		WHERE BID = #{bid} AND ISTATUS = 'S'
		
	</select>
	
	<!-- 가입 신청한 회원 가입을 승인하는 메소드 -->
	<update id="updateMemberStatus" parameterType="int">
		UPDATE MEMBER_BAND SET ISTATUS='Y' WHERE MBID = #{mbid}
	</update>
	
	<!-- 가입 신청한 회원 가입을 거절하는 메소드 -->
	<update id="refuseMemberStatus" parameterType="int">
		UPDATE MEMBER_BAND SET ISTATUS='N' WHERE MBID = #{mbid}
	</update>
	
	<!-- 밴드에 차단된 멤버 검색 목록 메소드 -->
	<select id = "searchBanMemberList" parameterType = "Member_Band" resultMap = "BanMemberListResultSet">
		SELECT b.BANID, M.MID, M.MNAME 
		FROM MEMBER m
		JOIN BAN b ON (b.MID = m.MID)
		WHERE BID = #{bid}
        
        <if test="mname != null">
			AND M.MNAME LIKE '%'|| #{mname} ||'%'
		</if>
	</select>
	
	<select id = "selectBoardDetail" parameterType = "int" resultMap = "BoardsResultSet">
		SELECT * FROM BOARDS WHERE BOARDID = #{boardid}
	</select>
	
	<select id = "selectRefList" parameterType = "int" resultMap = "BoardsResultSet">
		SELECT * FROM BOARDS WHERE REF_BID=#{boardid} AND BSTATUS='Y'
	</select>
	
	
	<select id = "selectAttFile" parameterType = "int" resultMap = "AttfileResultSet">
		SELECT FID, BOARDID, FORIGIN_NAME, EDIT_NAME, FILE_SRC, FDATE, FLEVEL FROM 
		(SELECT ROWNUM, FID, BOARDID, FORIGIN_NAME, EDIT_NAME, FILE_SRC, FDATE, FLEVEL FROM ATTFILE WHERE BOARDID = #{boardid} 
		ORDER BY FDATE DESC) WHERE ROWNUM = 1
	</select>
	
	<select id = "selectMemberBandProfile" parameterType="MemberBandProfile" resultMap = "MemberBandProfileResultSet">
		SELECT MB.MBID, MB.BID, MB.MID, MB.IDATE, MB.ISTATUS, MB.MLEVEL, M.MNAME, M.MTYPE, FILE_SRC, EDIT_NAME
		FROM MEMBER_BAND MB
		JOIN MEMBER M ON(MB.MID = M.MID)
		JOIN PROFILE P ON(M.MID = P.MID)
		WHERE MB.BID = #{bid} AND ISTATUS = 'Y' AND FDATE = 
		(SELECT MAX(FDATE) FROM (SELECT MID, BID FROM MEMBER_BAND WHERE BID = #{bid}) S JOIN PROFILE P ON(S.MID = P.MID)
        WHERE S.MID = MB.MID)
	
	</select>
	
	
	<!-- 해당 밴드의 초대 코드를 가져오는 메소드 -->
	<select id = "selectBandCode" parameterType = "int" resultType = "java.lang.String">
		SELECT BINVITE_CODE FROM BAND WHERE BID=#{bid}
	</select>
	
	<!-- 해당 밴드의 초대코드를 변경하는 메소드 -->
	<update id="updateBandCode" parameterType="Band">
		UPDATE BAND SET BINVITE_CODE=#{binvite_code} WHERE BID = #{bid}
	</update>
	
	<!-- 입력받은 초대코드와 중복되는 초대코드가 존재하는지 확인하는 메소드 -->
	<select id = "checkInviteCode" parameterType = "java.lang.String" resultType = "int">
		SELECT count(*) FROM BAND WHERE BINVITE_CODE=#{code}
	</select>
	
	<!-- 비공개 밴드에 해당 회원이 가입되어 있는지 확인하는 메소드 -->
	<select id = "checkBlock" parameterType = "Member_Band" resultType = "int">
		SELECT COUNT(*) FROM MEMBER_BAND WHERE BID=#{bid} AND MID=#{mid} AND ISTATUS='Y'
	</select>
	
	<!-- 첨부파일 삭제 -->
	<select id = "deleteAttFile" parameterType = "int">
		DELETE FROM ATTFILE WHERE BOARDID = #{boardId}
	</select>
	
	<!-- 첨부파일 수정 -->
	<update id="updateAttFile" parameterType="Attfile">
		UPDATE ATTFILE SET FORIGIN_NAME=#{forigin_name}, 
		 EDIT_NAME=#{edit_name}, FILE_SRC=#{file_src}, FDATE=SYSDATE
		WHERE BOARDID = #{boardId}
		
	</update>
	
	<!-- 해당 밴드의 첨부파일을 모두 가져오는 메소드 -->
	<select id = "selectAttList" parameterType = "int" resultMap = "AttfileResultSet">
		SELECT *
		FROM ATTFILE
		WHERE BOARDID = ANY (SELECT BOARDID FROM BOARDS WHERE BID = #{bid})
	</select>
	
	
	
	
</mapper>


















